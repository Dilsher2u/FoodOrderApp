{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_practice\\\\food_order_app\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport Card from \"../UI/Card\";\nimport React from \"react\";\nimport classes from './AvailableMeals.module.css';\nimport MealItem from \"./MealItem/MealItem\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      setIsLoading(true);\n      const response = await fetch('https://react-custom-hooks-1c7ed-default-rtdb.firebaseio.com/meals.json');\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    try {\n      fetchMeals();\n    } catch (error) {\n      setIsLoading(false);\n      setHttpError(error);\n    }\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 39\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AvailableMeals, \"6pndJp/WWpMtmhSnoCH9k0tFnXc=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["D:/React_practice/food_order_app/src/components/Meals/AvailableMeals.js"],"names":["Card","React","classes","MealItem","useEffect","useState","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","error","MealsLoading","MealsError","mealsList","map","meal"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAIA,MAAMC,cAAc,GAAG,MAAK;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAmBH,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,EAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMS,UAAU,GAAG,YAAY;AAC7BH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,yEAAD,CAA5B;;AAEA,UAAG,CAACD,QAAQ,CAACE,EAAb,EAAgB;AACd,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACD;;AAGD,YAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;AACA,YAAMC,WAAW,GAAG,EAApB;;AAEA,WAAI,MAAMC,GAAV,IAAiBH,YAAjB,EAA8B;AAC5BE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEF,GADW;AAEfG,UAAAA,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFT;AAGfC,UAAAA,WAAW,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHhB;AAIfC,UAAAA,KAAK,EAAER,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJV,SAAjB;AAMD;;AACDlB,MAAAA,QAAQ,CAACY,WAAD,CAAR;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAtBD;;AAuBA,QAAG;AACDG,MAAAA,UAAU;AACX,KAFD,CAGA,OAAOc,KAAP,EAAc;AACZjB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,YAAY,CAACe,KAAD,CAAZ;AACD;AAEF,GAhCQ,EAgCN,EAhCM,CAAT;;AAkCA,MAAGlB,SAAH,EAAa;AACX,wBACA;AAAS,MAAA,SAAS,EAAIP,OAAO,CAAC0B,YAA9B;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA;AAKD;;AAED,MAAGjB,SAAH,EAAa;AACX,wBACE;AAAS,MAAA,SAAS,EAAIT,OAAO,CAAC2B,UAA9B;AAAA,6BACE;AAAA,kBAAIlB;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,QAAMmB,SAAS,GAAGvB,KAAK,CAACwB,GAAN,CAAUC,IAAI,iBAAE,QAAC,QAAD;AAA0B,IAAA,EAAE,EAAEA,IAAI,CAACT,EAAnC;AAAuC,IAAA,IAAI,EAAES,IAAI,CAACR,IAAlD;AAAwD,IAAA,WAAW,EAAIQ,IAAI,CAACP,WAA5E;AAAyF,IAAA,KAAK,EAAEO,IAAI,CAACN;AAArG,KAAiBM,IAAI,CAACT,EAAtB;AAAA;AAAA;AAAA;AAAA,UAAhB,CAAlB;AACA,sBACI;AAAS,IAAA,SAAS,EAAIrB,OAAO,CAACK,KAA9B;AAAA,2BACI,QAAC,IAAD;AAAA,6BACA;AAAA,kBACKuB;AADL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAlED;;GAAMxB,c;;KAAAA,c;AAqEN,eAAeA,cAAf","sourcesContent":["import Card from \"../UI/Card\";\r\n\r\nimport React from \"react\";\r\nimport classes from './AvailableMeals.module.css'\r\nimport MealItem from \"./MealItem/MealItem\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nconst AvailableMeals = () =>{\r\n    const [meals, setMeals] =useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [httpError, setHttpError] = useState();\r\n\r\n    useEffect(()=>{\r\n      const fetchMeals = async () => {\r\n        setIsLoading(true);\r\n        const response = await fetch('https://react-custom-hooks-1c7ed-default-rtdb.firebaseio.com/meals.json');\r\n\r\n        if(!response.ok){\r\n          throw new Error(\"Something went wrong!\")\r\n        }\r\n\r\n\r\n        const responseData = await response.json()\r\n        const loadedMeals = []\r\n\r\n        for(const key in responseData){\r\n          loadedMeals.push({\r\n            id: key,\r\n            name: responseData[key].name,\r\n            description: responseData[key].description,\r\n            price: responseData[key].price\r\n          })\r\n        }\r\n        setMeals(loadedMeals);\r\n        setIsLoading(false)\r\n      };\r\n      try{\r\n        fetchMeals();\r\n      }\r\n      catch (error) {\r\n        setIsLoading(false)\r\n        setHttpError(error)\r\n      }\r\n      \r\n    }, [])\r\n\r\n    if(isLoading){\r\n      return( \r\n      <section className = {classes.MealsLoading}>\r\n        <p>Loading...</p>\r\n      </section>\r\n        )\r\n    }\r\n    \r\n    if(httpError){\r\n      return( \r\n        <section className = {classes.MealsError}>\r\n          <p>{httpError}</p>\r\n        </section>\r\n          )\r\n    }\r\n    \r\n    const mealsList = meals.map(meal=><MealItem key = {meal.id} id={meal.id} name={meal.name} description = {meal.description} price={meal.price} />)\r\n    return (\r\n        <section className = {classes.meals}>\r\n            <Card>\r\n            <ul>\r\n                {mealsList}\r\n            </ul>\r\n            </Card>\r\n        </section>\r\n    )\r\n\r\n};\r\n\r\n\r\nexport default AvailableMeals"]},"metadata":{},"sourceType":"module"}