{"ast":null,"code":"var _jsxFileName = \"D:\\\\React_practice\\\\food_order_app\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport classes from './Cart.module.css';\nimport Modal from \"../UI/Modal\";\nimport { useContext, useState } from \"react\";\nimport CartContext from \"../../store/cart-context\";\nimport CartItem from \"./CartItem\";\nimport Checkout from \"./Checkout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [isCheckingOut, setIsCheckingOut] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const orderHandler = () => {\n    setIsCheckingOut(true);\n  };\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes['button--alt'],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n\n  const submitOrderHandler = async userData => {\n    setIsSubmitting(true);\n    await fetch('https://react-custom-hooks-1c7ed-default-rtdb.firebaseio.com/orders.json', {\n      method: \"POST\",\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items\n      })\n    });\n    setIsSubmitting(false);\n    setDidSubmit(true);\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 35\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 23\n  }, this);\n\n  const cartModalContemt = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), isCheckingOut && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: submitOrderHandler,\n      onCancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 32\n    }, this), !isCheckingOut && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n\n  const isSubmittingModalContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Sending order data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 38\n  }, this);\n\n  const didSubmitModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Successfully sent the order!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes['button--alt'],\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [!isSubmitting && !didSubmit && cartModalContemt, isSubmitting && isSubmittingModalContent, !isSubmitting && didSubmit && didSubmitModalContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Cart, \"o2z2EGLUtP0ik0Jyzojbsuq4hmA=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["D:/React_practice/food_order_app/src/components/Cart/Cart.js"],"names":["React","classes","Modal","useContext","useState","CartContext","CartItem","Checkout","Cart","props","isCheckingOut","setIsCheckingOut","cartCtx","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","orderHandler","modalActions","actions","onClose","button","submitOrderHandler","userData","fetch","method","body","JSON","stringify","user","orderedItems","cartItems","map","name","price","bind","cartModalContemt","isSubmittingModalContent","didSubmitModalContent"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport classes from './Cart.module.css'\r\nimport Modal from \"../UI/Modal\";\r\nimport { useContext, useState } from \"react\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport CartItem from \"./CartItem\";\r\nimport Checkout from \"./Checkout\";\r\n\r\nconst Cart = props =>{\r\n\r\n    const [isCheckingOut, setIsCheckingOut] = useState(false);\r\n    const cartCtx = useContext(CartContext)\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [didSubmit, setDidSubmit] = useState(false);\r\n    const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`\r\n    const hasItems = cartCtx.items.length>0\r\n\r\n    const cartItemRemoveHandler = id =>{\r\n        cartCtx.removeItem(id);\r\n    };\r\n    const cartItemAddHandler = item =>{\r\n        cartCtx.addItem({...item, amount: 1})\r\n    };\r\n\r\n    const orderHandler = () =>{\r\n        setIsCheckingOut(true)\r\n\r\n    }\r\n    const modalActions = \r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n            {hasItems &&<button className={classes.button} onClick={orderHandler}>Order</button>}\r\n        </div>\r\n\r\n    const submitOrderHandler = async (userData) =>{\r\n        setIsSubmitting(true)\r\n        await fetch('https://react-custom-hooks-1c7ed-default-rtdb.firebaseio.com/orders.json',{\r\n            method: \"POST\",\r\n            body: JSON.stringify({\r\n                user: userData,\r\n                orderedItems: cartCtx.items\r\n            })\r\n        });\r\n        setIsSubmitting(false);\r\n        setDidSubmit(true)\r\n    }\r\n\r\n    const cartItems = <ul className={classes['cart-items']}>\r\n        {cartCtx.items.map(item=>(<CartItem key={item.id} name={item.name} amount={item.amount} price={item.price} onRemove={cartItemRemoveHandler.bind(null, item.id)} onAdd={cartItemAddHandler.bind(null, item)} />))}\r\n        </ul> \r\n    const cartModalContemt = \r\n    <React.Fragment>\r\n        {cartItems}\r\n            <div>\r\n                <span>Total Amount</span>\r\n                <span>{totalAmount}</span>\r\n            </div>\r\n            {isCheckingOut  && <Checkout onConfirm = {submitOrderHandler} onCancel = {props.onClose} />}\r\n            {!isCheckingOut && modalActions}\r\n    </React.Fragment>\r\n    \r\n    const isSubmittingModalContent = <p>Sending order data</p>\r\n    \r\n    const didSubmitModalContent = \r\n    <React.Fragment>\r\n        <p>Successfully sent the order!</p>\r\n        <div className={classes.actions}>\r\n            <button className={classes['button--alt']} onClick={props.onClose}>Close</button>\r\n        </div>\r\n    </React.Fragment>\r\n\r\n    return (\r\n        <Modal onClose={props.onClose}>\r\n            {!isSubmitting && !didSubmit && cartModalContemt}\r\n            {isSubmitting && isSubmittingModalContent}   \r\n            {!isSubmitting && didSubmit && didSubmitModalContent}\r\n        </Modal>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}